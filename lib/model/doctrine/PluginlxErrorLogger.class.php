<?php

/**
 * PluginlxErrorLogger
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    lxErrorLoggerPlugin
 * @subpackage model
 * @author     Lexik <j.barthe@lexik.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginlxErrorLogger extends BaselxErrorLogger
{
  /**
   * Retruns the $limit latest errors from a xml file.
   *
   * @param string $file
   * @param int $limit
   * @return DOMNodeList
   */
  public static function getLatestFromXml($file, $limit = 20)
  {
    $result = array();

    $document = new DOMDocument();
    $document->load($file);

    $xpath = new DOMXPath($document);
    $itemsNb = $xpath->evaluate('count(/errors/error)');

    $nodeList = $xpath->query(sprintf('/errors/error[position()>%d]', $itemsNb - $limit));

    for($i=0; $i<$nodeList->length; $i++)
    {
      $result[] = array(
        'id'          => $nodeList->item($i)->attributes->getNamedItem('id')->nodeValue,
        'environment' => $nodeList->item($i)->childNodes->item(0)->nodeValue,
        'type'        => $nodeList->item($i)->childNodes->item(1)->nodeValue,
        'code'        => $nodeList->item($i)->childNodes->item(2)->nodeValue,
        'class'       => $nodeList->item($i)->childNodes->item(3)->nodeValue,
        'message'     => $nodeList->item($i)->childNodes->item(4)->nodeValue,
        'file'        => $nodeList->item($i)->childNodes->item(5)->nodeValue,
        'line'        => $nodeList->item($i)->childNodes->item(6)->nodeValue,
        'module'      => $nodeList->item($i)->childNodes->item(7)->nodeValue,
        'action'      => $nodeList->item($i)->childNodes->item(8)->nodeValue,
        'trace'       => $nodeList->item($i)->childNodes->item(9)->nodeValue,
        'user_agent'  => $nodeList->item($i)->childNodes->item(10)->nodeValue,
        'server'      => $nodeList->item($i)->childNodes->item(11)->nodeValue,
        'session'     => $nodeList->item($i)->childNodes->item(12)->nodeValue,
        'url'         => $nodeList->item($i)->childNodes->item(13)->nodeValue,
        'created_at'  => $nodeList->item($i)->childNodes->item(15)->nodeValue,
      );
    }

    unset($nodeList, $document, $xpath);

    return $result;
  }
}
